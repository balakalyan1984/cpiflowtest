apiVersion: ai.sap.com/v1alpha1
kind: ServingTemplate
metadata:
  name: cpiflow-serving-pipeline
  annotations:
    executables.ai.sap.com/name: "cpiflow-model-serving"          # REQUIRED at top-level
    executables.ai.sap.com/description: "All-in-one CPI classifier API"
    scenarios.ai.sap.com/name: "CPIFLOW Optimizer PRO"
    scenarios.ai.sap.com/description: "FastAPI on KServe"
    artifacts.ai.sap.com/cpiflowmodel.kind: "model"
  labels:
    scenarios.ai.sap.com/id: "cpiflow-optimizer-pro"
    ai.sap.com/version: "7.0"                                     # bump to force new Revision
spec:
  inputs:
    artifacts:
      - name: cpiflowmodel
  template:
    apiVersion: "serving.kserve.io/v1beta1"
    kind: InferenceService
    metadata:
      name: cpiflow-serving
      # INNER fields MUST be strings (not objects). Use JSON to be unambiguous.
      annotations: "{}"
      labels: "{\"ai.sap.com/resourcePlan\":\"starter\"}"
    spec: |-
      predictor:
        minReplicas: 1
        maxReplicas: 2
        containers:
          - name: kserve-container
            image: docker.io/balakalyandocker/cpiflow-serve:py312-v1
            command: ["/bin/sh","-lc"]
            args:
              - |
                set -e
                export MODEL_MOUNT_DIR="${MODEL_MOUNT_DIR:-/mnt/models}"
                # tolerate up to 3 single-child wrapper folders
                for i in 1 2 3; do
                  if [ -d "$MODEL_MOUNT_DIR" ]; then
                    c="$(ls -1 "$MODEL_MOUNT_DIR" | wc -l | tr -d ' ')"
                    if [ "$c" = "1" ]; then
                      o="$(ls -1 "$MODEL_MOUNT_DIR")"
                      [ -d "$MODEL_MOUNT_DIR/$o" ] && MODEL_MOUNT_DIR="$MODEL_MOUNT_DIR/$o" && continue
                    fi
                  fi
                  break
                done
                # Preflight to fail clearly if the file isn't a real pickle
                python - <<'PY'
import os, sys, joblib
root = os.environ.get("MODEL_MOUNT_DIR","/mnt/models")
for name in ("model.pkl","pipeline.pkl"):
  p=os.path.join(root,name)
  if os.path.exists(p):
    try: joblib.load(p); print("OK:",p); break
    except Exception as e: print("LOAD-ERR:",p,repr(e)); sys.exit(3)
else:
  print("NO-MODEL-FILE at",root); sys.exit(2)
PY
                exec uvicorn --app-dir /app/src serve_cpiflow_kserve:app --host 0.0.0.0 --port ${PORT:-8080}
            env:
              - name: STORAGE_URI
                value: "{{inputs.artifacts.cpiflowmodel}}"
              - name: MODEL_MOUNT_DIR
                value: "/mnt/models"
            ports:
              - name: http1
                containerPort: 8080
            readinessProbe:
              httpGet:
                path: /health
                port: 8080
              initialDelaySeconds: 2
              periodSeconds: 5
            resources:
              requests:
                cpu: "100m"
                memory: "256Mi"
              limits:
                cpu: "1"
                memory: "1Gi"
