# =========================
# TRAINING WORKFLOWTEMPLATE
# =========================
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: cpiflow-training-pipeline
  annotations:
    scenarios.ai.sap.com/name: "CPIFLOW Optimizer"
    scenarios.ai.sap.com/description: "Train CPI log classifier"
    executables.ai.sap.com/name: "cpiflow-model-training"
    executables.ai.sap.com/description: "Produces flat model.pkl for serving"
    artifacts.ai.sap.com/cpiflowdataset.kind: "dataset"
    artifacts.ai.sap.com/cpiflowmodel.kind: "model"
  labels:
    scenarios.ai.sap.com/id: "cpiflow-optimizer-pro"
    ai.sap.com/version: "6.10"
spec:
  imagePullSecrets:
    - name: milton-credentials

  entrypoint: mypipeline

  arguments:
    parameters:
      - name: TARGET_COLUMN
        value: "CUSTOM_STATUS"
      - name: DATA_FILE
        value: "cpi_logs_500.csv"
      - name: TRAINER
        value: "LR"

  templates:
    - name: mypipeline
      inputs:
        artifacts:
          - name: cpiflowdataset
            path: /app/data

      container:
        image: docker.io/balakalyandocker/cpiflow-train:py312-v1
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh","-c"]
        env:
          - name: TARGET_COLUMN
            value: "{{workflow.parameters.TARGET_COLUMN}}"
          - name: DATA_PATH
            value: "/app/data/{{workflow.parameters.DATA_FILE}}"
          - name: MODEL_DIR
            value: "/app/model"
          - name: MODEL_PATH
            value: "/app/model/model.pkl"
          - name: TRAINER
            value: "{{workflow.parameters.TRAINER}}"
        args:
          - |
            set -euo pipefail
            echo '--- /app ---'; ls -la /app || true
            echo '--- /app/src ---'; ls -la /app/src || true
            echo '--- /app/data ---'; ls -la /app/data || true

            mkdir -p /app/model

            # Auto-detect CSV if declared DATA_PATH is missing
            if [ ! -f "$DATA_PATH" ]; then
              echo "WARN: $DATA_PATH not found. Auto-detecting CSV under /app/data"
              DATA_PATH="$(ls -1 /app/data/*.csv 2>/dev/null | head -n1 || true)"
              [ -z "$DATA_PATH" ] && { echo "ERROR: No CSV under /app/data"; exit 2; }
              echo "Using DATA_PATH=$DATA_PATH"
              export DATA_PATH
            fi

            # Train (image provides the script)
            python /app/src/train_cpi_pipeline.py

            echo '--- /app/model ---'; ls -la /app/model || true
            [ -f /app/model/model.pkl ] || { echo "ERROR: model.pkl missing"; exit 2; }

            # Optional companions (ensure they exist)
            [ -f /app/model/metrics.json ] || printf '{}' > /app/model/metrics.json
            [ -f /app/model/cpilog_artifact_insights.csv ] || printf 'artifact,metric,value\n' > /app/model/cpilog_artifact_insights.csv
            [ -f /app/model/cpilog_hotspots.csv ] || printf 'field,score\n' > /app/model/cpilog_hotspots.csv
            [ -f /app/model/cpilog_insights_report.md ] || printf '# CPI Insights (empty)\n' > /app/model/cpilog_insights_report.md

            # FLAT EXPORT (writable path) â†’ serving sees /mnt/models/model.pkl at root
            mkdir -p /app/export
            cp -v /app/model/model.pkl /app/export/model.pkl
            # (optional) expose companions at artifact root:
            # cp -v /app/model/metrics.json /app/export/metrics.json
            # cp -v /app/model/cpilog_hotspots.csv /app/export/cpilog_hotspots.csv
            # cp -v /app/model/cpilog_artifact_insights.csv /app/export/cpilog_artifact_insights.csv
            # cp -v /app/model/cpilog_insights_report.md /app/export/cpilog_insights_report.md

      outputs:
        artifacts:
          - name: cpiflowmodel
            globalName: cpiflowmodel
            path: /app/export
